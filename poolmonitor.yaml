esphome:
  name: pool-monitor
  platform: ESP32
  board: esp32doit-devkit-v1

<<: !include common/base.yaml

i2c:
  sda: 21
  scl: 22
  scan: True

ads1115:
  - address: 0x48

text_sensor:
  - platform: template
    name: Pool Monitor Uptime
    id: uptime_human
    icon: mdi:clock-start

  - platform: template
    name: PH Value
    id: ph_value

sensor:
  - platform: uptime
    name: Pool Monitor Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

  - platform: ads1115
    multiplexer: 'A0_GND'
    gain: 6.144
    name: "ADC A0-GND voltage"
    id: adc_sensor_a0
    update_interval: 10s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: ph_value
            state: !lambda |-
              float voltage = id(adc_sensor_a0).raw_state;
              return to_string((7 + (2.5 - voltage) * 5.7)).substr(0,4).c_str();

#  - platform: ads1115
#    multiplexer: 'A1_GND'
#    gain: 6.144
#    name: "ADC A1-GND voltage"
#    id: adc_sensor_a1
#    update_interval: 10s

  - platform: ads1115
    multiplexer: 'A2_GND'
    gain: 6.144
    name: "ADC A2-GND voltage"
    id: adc_sensor_a2
    update_interval: 10s

#  - platform: ads1115
#    multiplexer: 'A3_GND'
#    gain: 6.144
#    name: "ADC A3-GND voltage"
#    id: adc_sensor_a3
#    update_interval: 10s
